# Dockerfile for ReservaSegura Web (Production) - Monorepo Support
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy ALL files needed for npm install (workspace structure)
COPY package.json package-lock.json* turbo.json tsconfig.json ./
COPY apps/web/package.json ./apps/web/
COPY packages/ ./packages/

# Install all dependencies
RUN npm install

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy everything from deps (includes all node_modules)
COPY --from=deps /app ./

# Copy source code (will overwrite package.json files, which is fine)
COPY apps/web ./apps/web

# Generate Prisma client
RUN cd packages/database && npx prisma generate || true

# Build the web app
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production

# IMPORTANT: Set API URL at build time for Next.js to bundle it
ARG NEXT_PUBLIC_API_URL=https://www.reservasegura.pro
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

RUN npx turbo build --filter=@reservasegura/web

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3003

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy public folder
COPY --from=builder /app/apps/web/public ./apps/web/public

# Copy standalone output
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static

USER nextjs

EXPOSE 3003

ENV HOSTNAME="0.0.0.0"

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3003/ || exit 1

CMD ["node", "apps/web/server.js"]
