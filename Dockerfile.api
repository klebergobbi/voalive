# Dockerfile for ReservaSegura API (Production) - Debian para compatibilidade
FROM node:20-slim AS base

# Install dependencies
FROM base AS deps
# Install build dependencies + Playwright system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 make g++ ca-certificates openssl libssl-dev \
    # Playwright dependencies
    wget \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    libxshmfence1 \
    fonts-liberation \
    fonts-noto-color-emoji \
    fonts-noto-cjk \
    && rm -rf /var/lib/apt/lists/*
WORKDIR /app

# Copy workspace files
COPY package.json package-lock.json* turbo.json ./
COPY apps/api/package.json ./apps/api/
COPY packages/ ./packages/

# Install dependencies
RUN npm install

# Install Playwright browsers
RUN npx playwright install chromium --with-deps

# Build stage
FROM base AS builder
WORKDIR /app

COPY --from=deps /app ./
COPY apps/api ./apps/api

# Install OpenSSL para Prisma
RUN apt-get update && apt-get install -y --no-install-recommends \
    openssl ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Generate Prisma client com binary target correto
RUN cd packages/database && npx prisma generate

# Production stage
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=4000

# Install runtime dependencies + Playwright runtime libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget ca-certificates openssl \
    # Playwright runtime dependencies
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    libxshmfence1 \
    fonts-liberation \
    fonts-noto-color-emoji \
    && rm -rf /var/lib/apt/lists/*

RUN groupadd --system --gid 1001 nodejs
RUN useradd --system --uid 1001 --gid nodejs apiuser

# Copy everything from builder
COPY --from=builder /app ./

# Copy Playwright browsers from deps stage
COPY --from=deps /root/.cache/ms-playwright /home/apiuser/.cache/ms-playwright

# Set ownership for apiuser
RUN chown -R apiuser:nodejs /home/apiuser/.cache

USER apiuser

EXPOSE 4000

ENV HOSTNAME="0.0.0.0"
# Playwright environment variables
ENV PLAYWRIGHT_BROWSERS_PATH=/home/apiuser/.cache/ms-playwright
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:4000/health || exit 1

# Use tsx to run TypeScript
CMD ["npx", "tsx", "apps/api/src/index.ts"]
